/**
 * 1. Event Loop ржХрзА?

Event Loop рж╣рж▓рзЛ JS engine ржПрж░ ржПржоржи ржПржХржЯрж┐ system ржпрж╛ asynchronous ржХрж╛ржЬржЧрзБрж▓рзЛ manage ржХрж░рзЗред

JS single-threaded тЖТ ржПржХрж╕рж╛ржерзЗ ржПржХржЯрж╛ржЗ ржХрж╛ржЬ ржХрж░рждрзЗ ржкрж╛рж░рзЗ

ржХрж┐ржирзНрждрзБ ржЖржорж░рж╛ ржЪрж╛ржЗ network request ржмрж╛ timer background ржП ржЪрж▓рзЗ тЖТ ржХрж╛ржЬ рж╢рзЗрж╖ рж╣рж▓рзЗ main thread ржП callback run рж╣ржпрж╝

Event Loop ржПржЗ рж╕ржм asynchronous task main thread ржП schedule ржХрж░рзЗ
 */

//...................................

/**
 * 2. How it works (рж╕рж╣ржЬржнрж╛ржмрзЗ)

JS ржХрзЛржб line-by-line execute ржХрж░рзЗ тЖТ Call Stack ржП рж░рж╛ржЦрж╛ рж╣ржпрж╝

ржпржжрж┐ ржХрзЛржирзЛ asynchronous ржХрж╛ржЬ ржЖрж╕рзЗ (setTimeout, fetch) тЖТ Web APIs / background handle ржХрж░рзЗ

ржХрж╛ржЬ рж╢рзЗрж╖ рж╣рж▓рзЗ тЖТ callback Task Queue / Callback Queue рждрзЗ ржпрж╛ржпрж╝

Event Loop ржЪрзЗржХ ржХрж░рзЗ тЖТ ржпржжрж┐ Call Stack ржЦрж╛рж▓рж┐ тЖТ Queue ржерзЗржХрзЗ callback push ржХрж░рзЗ Call Stack ржП execute ржХрж░рж╛ржпрж╝
 */

// ......................................

// Example
//console.log("Start");

// setTimeout(() => {
//   console.log("Timeout done");
// }, 0);

// console.log("End");

// Output
/**
 * 
 * Start
 * End
 * Timeout done
 *  


 */

//.............................

/**
 * ржХрзЗржи?

"Start" тЖТ synchronous тЖТ Call Stack ржП тЖТ print

setTimeout тЖТ asynchronous тЖТ timer background тЖТ 0ms ржкрж░ callback queue рждрзЗ

"End" тЖТ synchronous тЖТ print

Call Stack ржЦрж╛рж▓рж┐ тЖТ Event Loop queue ржерзЗржХрзЗ callback (Timeout done) push ржХрж░рзЗ execute
 */

// Summary

/**
 * 4. Key Point

Call Stack тЖТ ржПржЦржи ржХрзЛржи ржХрж╛ржЬ ржЪрж▓ржЫрзЗ рждрж╛ track ржХрж░рзЗ

Web APIs / background тЖТ asynchronous ржХрж╛ржЬ handle ржХрж░рзЗ

Callback Queue тЖТ ржХрж╛ржЬ рж╢рзЗрж╖ рж╣рж▓рзЗ callback рж░рж╛ржЦрзЗ

Event Loop тЖТ main thread free рж╣рж▓рзЗ queue ржерзЗржХрзЗ callback push ржХрж░рзЗ execute ржХрж░рж╛ржпрж╝

ЁЯТб рж╕рж╣ржЬ ржХржерж╛ржпрж╝:

тАЬEvent Loop рж╣рж▓рзЛ JS engine ржПрж░ traffic controller ржпрж╛ asynchronous ржХрж╛ржЬржХрзЗ line-by-line execute ржХрж░рж╛ржпрж╝редтАЭ
 */
